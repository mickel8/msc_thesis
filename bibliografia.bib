%% State of the art %%
@article{the-quic-fix-for-optimal-video-streaming,
    author = {Palmer, Mirko and Krüger, Thorben and Chandrasekaran, Balakrishnan and Feldmann, Anja},
    year = {2018},
    month = {12},
    pages = {43-49},
    title = {The QUIC Fix for Optimal Video Streaming},
    doi = {10.1145/3284850.3284857}
}

@article{quic-better-for-what-and-for-whom,
    author = {Cook, Sarah and Mathieu, Bertrand and Truong, Patrick and Hamchaoui, Isabelle},
    year = {2017},
    month = {05},
    pages = {1-6},
    title = {QUIC: Better for what and for whom?},
    doi = {10.1109/ICC.2017.7997281}
}


@article{impact-of-video-quality-on-user-engagement,
    author = {Dobrian, Florin and Awan, Asad and Joseph, Dilip and Ganjam, Aditya and Zhan, Jibin and Sekar, Vyas and Stoica, Ion and Zhang, Hui},
    title = {Understanding the Impact of Video Quality on User Engagement},
    year = {2013},
    issue_date = {March 2013},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {56},
    number = {3},
    issn = {0001-0782},
    url = {https://doi.org/10.1145/2428556.2428577},
    doi = {10.1145/2428556.2428577},
    journal = {Commun. ACM},
    month = mar,
    pages = {91–99},
    numpages = {9}
}

@article{game-of-protocols,
    author = {Arısu, Şevket and Yildiz, Ertan and Begen, Ali},
    year = {2019},
    month = {02},
    title = {Game of protocols: Is QUIC ready for prime time streaming?},
    volume = {30},
    journal = {International Journal of Network Management},
    doi = {10.1002/nem.2063}
}

@article{iot,
    author = {Saif, Darius and Matrawy, Ashraf},
    year = {2021},
    month = {06},
    title = {A Pure HTTP/3 Alternative to MQTT-over-QUIC in Resource-Constrained IoT}
}

@article{and-quic-meets-iot,
    author = {Fernández, Fátima and Zverev, Mihail and Garrido, Pablo and Juárez, José R. and Bilbao, Josu and Agüero, Ramón},
    booktitle = {2020 16th International Conference on Wireless and Mobile Computing, Networking and Communications (WiMob)},
    title = {And QUIC meets IoT: performance assessment of MQTT over QUIC},
    year = {2020},
    pages = {1-6},
    doi = {10.1109/WiMob50308.2020.9253384}
}

@article{9045245,
    author = {Bujari, Armir and Palazzi, Claudio E. and Quadrio, Giacomo and Ronzani, Daniele},
    booktitle = {2020 IEEE 17th Annual Consumer Communications Networking Conference (CCNC)},
    title = {Emerging Interactive Applications over QUIC},
    year = {2020},
    pages = {1-4},
    doi = {10.1109/CCNC46108.2020.9045245}
}

@article{7562075,
    author = {Szabó, Géza and Rácz, Sándor and Bezzera, Daniel and Nogueira, Igor and Sadok, Djamel},
    booktitle = {2016 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)},
    title = {Media QoE enhancement With QUIC},
    year = {2016},
    pages = {219-220},
    doi = {10.1109/INFCOMW.2016.7562075}
}

@article{8806051,
    author = {Celestino, Alessandro and Romano, Simon Pietro},
    booktitle = {2019 Eleventh International Conference on Ubiquitous and Future Networks (ICUFN)},
    title = {An attempt at introducing Multipath in QUIC},
    year = {2019},
    pages = {352-357},
    doi = {10.1109/ICUFN.2019.8806051}
}

@article{9524947,
    author = {Volodina, Ekaterina and Rathgeb, Erwin P.},
    booktitle = {2021 IEEE 46th Conference on Local Computer Networks (LCN)},
    title = {Impact of ACK Scaling Policies on QUIC Performance},
    year = {2021},
    pages = {41-48},
    doi = {10.1109/LCN52139.2021.9524947}
}

%% END %%

@ARTICLE{4015574,
    author = {G. J. {Sullivan} and J. {Ohm} and A. {Ortega} and E. {Delp} and A. {Vetro} and M. {Barni}},
    journal = {IEEE Signal Processing Magazine},
    title = {dsp Forum - Future of Video Coding and Transmission},
    year = {2006},
    volume = {23},
    number = {6},
    pages = {76-82},
    doi = {10.1109/SP-M.2006.248722}
}

@misc{rfc9001,
    series = {Request for Comments},
    number = 9001,
    howpublished = {RFC 9001},
    publisher = {RFC Editor},
    doi = {10.17487/RFC9001},
    url = {https://rfc-editor.org/rfc/rfc9001.txt},
    author = {Martin Thomson and Sean Turner},
    title = {{Using TLS to Secure QUIC}},
    pagetotal = 52,
    year = 2021,
    month = may,
    abstract = {This document describes how Transport Layer Security (TLS) is used to secure QUIC.},
}

@misc{rfc9002,
    series = {Request for Comments},
    number = 9002,
    howpublished = {RFC 9002},
    publisher = {RFC Editor},
    doi = {10.17487/RFC9002},
    url = {https://rfc-editor.org/rfc/rfc9002.txt},
    author = {Jana Iyengar and Ian Swett},
    title = {{QUIC Loss Detection and Congestion Control}},
    pagetotal = 42,
    year = 2021,
    month = may,
    abstract = {This document describes loss detection and congestion control mechanisms for QUIC.},
}


@techreport{ietf-quic-datagram-02,
    number = {draft-ietf-quic-datagram-02},
    type = {Internet-Draft},
    institution = {Internet Engineering Task Force},
    publisher = {Internet Engineering Task Force},
    note = {Work in Progress},
    url = {https://datatracker.ietf.org/doc/html/draft-ietf-quic-datagram-02},
    author = {Tommy Pauly and Eric Kinnear and David Schinazi},
    title = {{An Unreliable Datagram Extension to QUIC}},
    pagetotal = 9,
    year = 2021,
    month = feb,
    day = 16,
    abstract = {This document defines an extension to the QUIC transport protocol to add support for sending and receiving unreliable datagrams over a QUIC connection. Discussion of this work is encouraged to happen on the QUIC IETF mailing list quic@ietf.org (mailto:quic@ietf.org) or on the GitHub repository which contains the draft: https://github.com/quicwg/ datagram (https://github.com/quicwg/datagram).},
}

@misc{rfc4254,
    series = {Request for Comments},
    number = 4254,
    howpublished = {RFC 4254},
    publisher = {RFC Editor},
    doi = {10.17487/RFC4254},
    url = {https://rfc-editor.org/rfc/rfc4254.txt},
    author = {Chris M. Lonvick and Tatu Ylonen},
    title = {{The Secure Shell (SSH) Connection Protocol}},
    pagetotal = 24,
    year = 2006,
    month = jan,
    abstract = {Secure Shell (SSH) is a protocol for secure remote login and other secure network services over an insecure network. This document describes the SSH Connection Protocol. It provides interactive login sessions, remote execution of commands, forwarded TCP/IP connections, and forwarded X11 connections. All of these channels are multiplexed into a single encrypted tunnel. The SSH Connection Protocol has been designed to run on top of the SSH transport layer and user authentication protocols. {[} STANDARDS-TRACK {]}},
}

@techreport{bider-ssh-quic-09,
    number = {draft-bider-ssh-quic-09},
    type = {Internet-Draft},
    institution = {Internet Engineering Task Force},
    publisher = {Internet Engineering Task Force},
    note = {Work in Progress},
    url = {https://datatracker.ietf.org/doc/html/draft-bider-ssh-quic-09},
    author = {denis bider},
    title = {{QUIC-based UDP Transport for Secure Shell (SSH)}},
    pagetotal = 35,
    year = 2020,
    month = dec,
    day = 2,
    abstract = {The Secure Shell protocol (SSH) {[} RFC4251 {]} is widely used for purposes including secure remote administration, file transfer using SFTP and SCP, and encrypted tunneling of TCP connections. Because it is based on TCP, SSH suffers similar problems as motivate the HTTP protocol to transition to UDP-based QUIC {[} QUIC {]} . These include: unauthenticated network intermediaries can trivially disconnect SSH sessions; SSH connections are lost when mobile clients change IP addresses; performance limitations in OS-based TCP stacks; many round-trips to establish a connection; duplicate flow control on the level of the connection as well as channels. This memo specifies SSH key exchange over UDP and leverages QUIC to provide a UDP-based transport.},
}

@techreport{the-tactile-internet,
    institution = {International Telecommunication Union},
    publisher = {International Telecommunication Union},
    url = {https://www.itu.int/dms_pub/itu-t/oth/23/01/T23010000230001PDFE.pdf},
    author = {International Telecommunication Union},
    title = {{The Tactile Internet}},
    year = 2014,
    month = aug,
}

@misc{rfc9000,
    series = {Request for Comments},
    number = 9000,
    howpublished = {RFC 9000},
    publisher = {RFC Editor},
    doi = {10.17487/RFC9000},
    url = {https://rfc-editor.org/rfc/rfc9000.txt},
    author = {Jana Iyengar and Martin Thomson},
    title = {{QUIC: A UDP-Based Multiplexed and Secure Transport}},
    pagetotal = 151,
    year = 2021,
    month = may,
    abstract = {This document defines the core of the QUIC transport protocol. QUIC provides applications with flow-controlled streams for structured communication, low-latency connection establishment, and network path migration. QUIC includes security measures that ensure confidentiality, integrity, and availability in a range of deployment circumstances. Accompanying documents describe the integration of TLS for key negotiation, loss detection, and an exemplary congestion control algorithm.},
}

@techreport{engelbart-rtp-over-quic-00,
    number = {draft-engelbart-rtp-over-quic-00},
    type = {Internet-Draft},
    institution = {Internet Engineering Task Force},
    publisher = {Internet Engineering Task Force},
    note = {Work in Progress},
    url = {https://datatracker.ietf.org/doc/html/draft-engelbart-rtp-over-quic-00},
    author = {Joerg Ott and Mathis Engelbart},
    title = {{RTP over QUIC}},
    pagetotal = 15,
    year = 2021,
    month = jul,
    day = 12,
    abstract = {This document specifies a minimal mapping for encapsulating RTP and RTCP packets within QUIC. It also discusses how to leverage state from the QUIC implementation in the endpoints to reduce the exchange of RTCP packets. Discussion Venues This note is to be removed before publishing as an RFC. Discussion of this document takes place on the mailing list (), which is archived at . Source for this draft and an issue tracker can be found at https://github.com/mengelbart/rtp-over-quic-draft.},
}

@misc{rfc8085,
    series = {Request for Comments},
    number = 8085,
    howpublished = {RFC 8085},
    publisher = {RFC Editor},
    doi = {10.17487/RFC8085},
    url = {https://rfc-editor.org/rfc/rfc8085.txt},
    author = {Lars Eggert and Gorry Fairhurst and Greg Shepherd},
    title = {{UDP Usage Guidelines}},
    pagetotal = 55,
    year = 2017,
    month = mar,
    abstract = {The User Datagram Protocol (UDP) provides a minimal message-passing transport that has no inherent congestion control mechanisms. This document provides guidelines on the use of UDP for the designers of applications, tunnels, and other protocols that use UDP. Congestion control guidelines are a primary focus, but the document also provides guidance on other topics, including message sizes, reliability, checksums, middlebox traversal, the use of Explicit Congestion Notification (ECN), Differentiated Services Code Points (DSCPs), and ports. Because congestion control is critical to the stable operation of the Internet, applications and other protocols that choose to use UDP as an Internet transport must employ mechanisms to prevent congestion collapse and to establish some degree of fairness with concurrent traffic. They may also need to implement additional mechanisms, depending on how they use UDP. Some guidance is also applicable to the design of other protocols (e.g., protocols layered directly on IP or via IP-based tunnels), especially when these protocols do not themselves provide congestion control. This document obsoletes RFC 5405 and adds guidelines for multicast UDP usage.},
}

@misc{rfc3711,
    series = {Request for Comments},
    number = 3711,
    howpublished = {RFC 3711},
    publisher = {RFC Editor},
    doi = {10.17487/RFC3711},
    url = {https://rfc-editor.org/rfc/rfc3711.txt},
    author = {Karl Norrman and David McGrew and Mats Naslund and Elisabetta Carrara and Mark Baugher},
    title = {{The Secure Real-time Transport Protocol (SRTP)}},
    pagetotal = 56,
    year = 2004,
    month = mar,
    abstract = {This document describes the Secure Real-time Transport Protocol (SRTP), a profile of the Real-time Transport Protocol (RTP), which can provide confidentiality, message authentication, and replay protection to the RTP traffic and to the control traffic for RTP, the Real-time Transport Control Protocol (RTCP). {[} STANDARDS-TRACK {]}},
}
